{"version":3,"sources":["components/Spinner.js","components/Counter.js","App.js","index.js"],"names":["Spinner","className","Counter","useState","temp","settemp","minim","setminim","maxim","useEffect","gb","a","fetch","res","json","flag","parseInt","fun","req","method","headers","body","JSON","stringify","q","u","onClick","type","onChange","e","target","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAceA,EAZD,WAEV,OACI,sBAAKC,UAAU,OAAf,UAII,wBAJJ,IAIgB,wBAJhB,IAI4B,wBAJ5B,IAIwC,4BC0FjCC,G,MA3FC,WAGZ,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,KAAnC,mBAAOK,EAAP,UAEAC,qBAAU,WAGM,OAARH,GAAcC,EAAS,GAC3B,IAAMG,EAAE,uCAAC,8BAAAC,EAAA,sEAGYC,MAAM,IAHlB,cAGCC,EAHD,gBAIcA,EAAIC,OAJlB,UAMQ,QAFPC,EAJD,wCAMqBR,EAASS,SAASD,IANvC,2CAAD,qDAQVL,MACA,IAEFD,qBAAU,WAGNJ,EAAQ,GAEI,OAARC,GAAcC,EAAS,GAEvBD,GAAOE,GAAOD,EAASC,GAEpBF,GAAO,GAAGC,EAAS,GAC1B,IAAMU,EAAG,uCAAC,gCAAAN,EAAA,6DAGAO,EAAI,CAAEC,OAAQ,MACpBC,QAAS,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACC,EAAGlB,KALnB,SAQWM,MAAM,sCAAuCM,GARxD,cAQAL,EARA,gBAQ6EA,EAAIC,OARjF,OAQoEW,EARpE,OAUApB,EAAHoB,EAAWA,EAAE,EAEH,GAZP,2CAAD,qDAcTR,MACF,CAACX,IAiBH,OAEI,cADA,CACA,OAAKL,UAAU,WAAf,UAIc,GAANG,EACA,sBAAKH,UAAU,KAAf,UAEA,sBAAKA,UAAU,WAAf,cAA2B,cAAC,EAAD,IAA3B,OACA,0DACU,qBAAKA,UAAU,OAE/B,sBAAKA,UAAU,OAAf,UAEM,wBAAQA,UAAU,aAAayB,QAAS,WAnBlCnB,EAAVD,GAAO,EAAY,EAETA,EAAM,IAiBZ,iBAEA,uBAAOqB,KAAK,SAASC,SAAU,SAACC,GAAD,OAAOtB,EAASS,SAASa,EAAEC,OAAOC,SAASA,MAAOzB,IAEjF,wBAAQL,UAAU,aAAayB,QAAS,WA/B9BnB,EAAdD,GAAOE,EAAgBA,EAEbF,EAAO,IA6Bb,oBAGJ,oBAAGL,UAAU,KAAb,2BAAiCK,UClF9B0B,EARH,WACV,OACE,qBAAK/B,UAAU,UAAf,SACE,cAAC,EAAD,OCDNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2c7fe8ec.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Spinner.css' //import spinner css\r\nconst Spinner=()=>\r\n{\r\n    return(\r\n        <div className=\"spin\">\r\n        {/* All the following divs represents the dots in the spinner.\r\n            Here I have used 4 divs in order to represent the dots.\r\n        */}\r\n            <div></div> <div></div> <div></div> <div></div>\r\n        </div>\r\n    );\r\n}\r\n//Export spinner component\r\nexport default Spinner;","//Quicksell Assignment\r\n//Ayush Goutam\r\nimport React, { useState, useEffect } from 'react'; //Imported React hooks\r\nimport Spinner from './Spinner'; // import spinner component\r\n//import css files of spinner and counter component\r\nimport './Spinner.css'\r\nimport './Counter.css'\r\n//This defines the Counter function\r\nconst Counter = () =>\r\n {\r\n     //three state variables are defined using Use state hook \r\n    const [temp, settemp] = useState(0); // storing temporary value\r\n    const [minim, setminim] = useState(1); // storing  minimum value that can be decremented\r\n    const [maxim, setmaxim] = useState(1000); // storing maximum value that can be incremented\r\n    //use effect hook is used \r\n    useEffect(() => \r\n    {\r\n        // if minimum value is null then set its value to 1\r\n        if (minim===null) setminim(1);\r\n        const gb=async()=>\r\n        {\r\n            // using async await and get the response\r\n            const res= await fetch('');\r\n            const flag = await res.json();\r\n            // if only flag value is null then \r\n            if (flag !== null)  await setminim(parseInt(flag));\r\n        }\r\n      gb();\r\n    },[]);\r\n    //using use effect hook\r\n    useEffect(() =>\r\n    {\r\n        // firstly set temporary value to 0\r\n        settemp(0);\r\n        //if minimum value is Null then set its value to 1\r\n        if (minim===null) setminim(1); \r\n         //if minimum value is greater then maxim then set its value to maxim\r\n        if (minim>=maxim) setminim(maxim);\r\n         //if minimum value is non-positive then set its value to 0\r\n           if (minim<=0) setminim(0);\r\n        const fun=async()=> \r\n        {\r\n            //using async await\r\n            const req={ method: 'PUT', \r\n            headers: {'Content-Type':'application/json'}\r\n            ,body:JSON.stringify({q: minim})};\r\n            // store in req,res\r\n            //getting the response \r\n            const res= await fetch('https://xyz-d.firebaseio.com/p.json', req); const u= await res.json();\r\n            //if there is responnse update value of temporary\r\n            if(u) settemp(u+2);\r\n            // else set the value of temporary as 1\r\n            else settemp(1);    \r\n        }\r\n        fun();\r\n    },[minim]);\r\n    // function for plus button \r\n    const plus=()=>\r\n    {\r\n        //if minimum is >=maxim then set it as maxim\r\n        if (minim>=maxim) setminim(maxim);\r\n        // else set it as minim+1\r\n        else setminim(minim+ 1);\r\n    }\r\n    // function for minus button \r\n    const minus=()=> \r\n    {\r\n        //if minimum is non-positive then set it as 0\r\n        if (minim<=0) setminim(0);\r\n        // else set it as minim-1\r\n        else setminim(minim-1);\r\n    }\r\n    return (\r\n        //Main Div block\r\n        <div className=\"firstdiv\">\r\n            {\r\n                // If temp value is equal to Zero then render first component \r\n                // else render 2nd component\r\n               (temp==0) ? (\r\n                <div className=\"ut\" >\r\n                {/*  this part contains the spinner component*/}\r\n                <div className=\"spinload\"> <Spinner /> </div> \r\n                <p> Saving counter value </p>\r\n                </div>): (<div className=\"ut\"></div>)\r\n            }\r\n          <div className=\"pack\">\r\n                {/* this part contains the minus button */}\r\n                <button className=\"neg common\" onClick={()=>minus()}> - </button>\r\n                {/* this part contains the input value */}\r\n                <input type=\"number\" onChange={(e) => setminim(parseInt(e.target.value))} value={minim} />\r\n                {/* this part contains the plus button */}\r\n                <button className=\"pos common\" onClick={() =>plus()}> + </button>\r\n          </div>\r\n          {/* this part prints the counter value*/}\r\n            <p className=\"lt\">Counter value:{minim}</p>\r\n        </div>\r\n    );\r\n}\r\n//export conter component\r\nexport default Counter;","import './App.css';\r\nimport React from 'react'\r\nimport Counter from './components/Counter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"maindiv\">\r\n      <Counter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}